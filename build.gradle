buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
        maven { url = "https://jitpack.io" }
    }
    dependencies {
        classpath "com.github.CDAGaming:ForgeGradle:FG_3.0-SNAPSHOT"
        classpath "com.github.CDAGaming:CurseGradle:master-SNAPSHOT"
    }
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: "com.matthewprenger.cursegradle"


import net.minecraftforge.gradle.common.task.SignJar
import org.apache.tools.ant.filters.ReplaceTokens

version = "${majorVersion}.${minorVersion}.${revisionVersion}"
group = "com.gitlab.cdagaming"
archivesBaseName = "${mod_name}-${mc_version}"

allprojects {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

curseforge {
    project {
        apiKey = System.getenv("CF_APIKEY")
        id = "297038"
        changelog = file("Changes.md")
        changelogType = "markdown"
        releaseType = "release"
        addGameVersion "${mc_version}"
        addGameVersion "Forge"

        mainArtifact(jar) {
            displayName = "${mod_name} v${version} (${mc_version})"
        }
    }
}

minecraft {
    mappings channel: 'snapshot', version: "${mc_mappings}"

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                craftpresence {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                craftpresence {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
}

jar {
    from sourceSets.main.output
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", "${mc_version}"

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': "${mc_version}"
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task signJar(type: SignJar, dependsOn: jar) {
    onlyIf {
        System.getenv("key_MAINPASS") != null
    }

    keyStore = "keystore.jks"
    alias = System.getenv("key_Alias")
    storePass = System.getenv("key_MAINPASS")
    keyPass = System.getenv("keyPass")

    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

def copyDir = "$compileJava.temporaryDir/replaced"
task tokenReplace(type: Copy) {
    from(sourceSets.main.java.sourceDirectories)
    into copyDir
    filter(ReplaceTokens, tokens: [NAME: mod_name, MAJOR_VERSION: majorVersion, MINOR_VERSION: minorVersion, REVISION_VERSION: revisionVersion, FINGERPRINT: certfingerprint])
}
compileJava.setSource(copyDir)
compileJava.dependsOn(tokenReplace)

tasks.build.dependsOn signJar
tasks.curseforge.dependsOn build
