plugins {
    id "com.modrinth.minotaur" version "2.4.4"
    id "io.github.CDAGaming.cursegradle" version "1.6.0"
}

minecraft {
    // N/A
}

def archive_name = "${rootProject.mod_name}-${rootProject.loader_name}"
def targetFile = file("$rootDir/build/libs/${fileFormat}-universal.jar")
if (!targetFile.exists() && isJarMod) {
    // Fallback to the Forge Sub-Project Output when in a Jar Mod configuration
    targetFile = file("$rootDir/forge/build/libs/${fileFormat}-forge.jar")
}

curseforge {
    project {
        apiKey = System.getenv("CF_APIKEY")
        id = "297038"
        changelog = file("$rootDir/Changes.md")
        changelogType = "markdown"
        releaseType = "${deploymentType}".toLowerCase()
        def mcVersionTarget = (isLegacy && protocol < 22) ? "1.0" : "${mc_version}"
        for (String loaderName : rootProject.enabled_platforms.split(",")) {
            def loaderToAdd = loaderName

            // CurseForge Compatibility Layer (For Modloader and Beta MC)
            // (This can be removed when/if CurseForge ever adds support for this)
            if (loaderToAdd.equalsIgnoreCase("modloader")) {
                // MC 1.0.0 and above, and using ModLoader
                loaderToAdd = (protocol >= 22) ? "Forge" : ""
            }
            addGameVersion loaderToAdd.capitalize()
        }
        addGameVersion mcVersionTarget

        mainArtifact(targetFile) {
            it.displayName = "${archive_name} v${versionId} ${versionLabel} (${mc_version})"
        }
    }
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "${mod_name}".toLowerCase()
    versionNumber = "v${versionFormat}_${loader_name}".replaceAll("\\s", "").toLowerCase()
    versionName = "${archive_name} v${versionId} ${versionLabel} (${mc_version})"
    changelog = file("$rootDir/Changes.md").text
    versionType = "${deploymentType}".toLowerCase()
    uploadFile = targetFile
    gameVersions = ["${mc_version}"]
    loaders = rootProject.enabled_platforms.split(",").toList()
    dependencies = []
}

task publishToModSites {
    publishToModSites.dependsOn 'modrinth'
    publishToModSites.dependsOn 'curseforge'
}